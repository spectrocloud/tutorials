name: Release to Production

on:
  push:
    branches: [ main ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PALETTE_VERSION: 3.3.0
  PALETTE_CLI_VERSION: 3.3.0


jobs:    
  docker:
    name: "Release Docker image"
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.get-version.outputs.version }}
    steps:


    - name: Setup nodeJs
      uses: actions/setup-node@v1.4.4
      with:
        node-version: '14'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    -
      name: "Get dependencies"
      id: dependencies
      run: |
          npm ci
          npx semantic-release --dry-run
          cat VERSION.env
          source VERSION.env
          echo "::set-output name=version::$VERSION"

    - name: Set up QEMU
      if: ${{ steps.dependencies.outputs.VERSION != ''}}
      uses: docker/setup-qemu-action@v2

    - name: "Set up Docker Buildx"
      if: ${{ steps.dependencies.outputs.VERSION != ''}}
      uses: docker/setup-buildx-action@v2


    - name: Login to GHCR
      if: ${{ steps.dependencies.outputs.VERSION != ''}}
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}


    - name: Build and push
      if: ${{ steps.dependencies.outputs.VERSION != ''}}
      uses: docker/build-push-action@v2
      with:
        context: .
        build-args: |
          PALETTE_VERSION=${{env.PALETTE_VERSION}}
          PALETTE_CLI_VERSION=${{env.PALETTE_CLI_VERSION}}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/${{ github.repository }}:${{steps.dependencies.outputs.VERSION}}
          

  release:
    name: "Release"
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
      - name: "release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
              npx semantic-release